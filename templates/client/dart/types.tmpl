import 'package:json_annotation/json_annotation.dart';

part 'types.g.dart';

@JsonSerializable()
class QueryResponse<T> {
  int count;
  List<T> array;

  QueryResponse({
    required this.count,
    required this.array,
  });

  factory QueryResponse.fromJson(
    Map<String, dynamic> json,
    T Function(Object? json) fromJsonT,
  ) =>
      _$QueryResponseFromJson(json, fromJsonT);

  Map<String, dynamic> toJson(Map<String, dynamic> Function(T value) toJsonT) =>
      _$QueryResponseToJson(this, toJsonT);
}

@JsonSerializable()
class ApiResponse<T> {
  int code;
  String status;
  String? error;
  T? data;

  ApiResponse({
    required this.code,
    required this.status,
    this.error,
    this.data,
  });

  factory ApiResponse.fromJson(
    Map<String, dynamic> json,
    T Function(Object? json) fromJsonT,
  ) =>
      _$ApiResponseFromJson(json, fromJsonT);

  Map<String, dynamic> toJson(Object Function(T value) toJsonT) =>
      _$ApiResponseToJson(this, toJsonT);
}

{{ range .Schema.Types }}
   @JsonSerializable()
   class {{ .Name }} {
   {{ range .Columns -}}
   {{ if .Tags.Json.Ignore }} {{ continue }} {{ end -}}
   {{ dartType . }}{{ tsOptional . }} {{ dartName . }};
   {{ end }}

   {{ .Name }}({
      {{ range .Columns -}} 
      {{ if .Tags.Json.Ignore }} {{ continue }} {{ end -}}
      {{ if columnOptional . -}}
      this.{{ dartName . }}, 
      {{ else -}}
      required this.{{ dartName . }},
      {{ end -}}
      {{ end -}}
   });

   factory {{ .Name }}.fromJson(Map<String, dynamic> json) => _${{ .Name }}FromJson(json);
   Map<String, dynamic> toJson() => _${{ .Name }}ToJson(this);

   }
{{ end }}


{{ range .Schema.Tables -}}
@JsonSerializable()
class {{ .Name }} {
  {{ range .Columns -}}
  {{ if .Tags.Json.Ignore }} {{ continue }} {{ end -}}
  {{ dartType . }}{{ tsOptional . }} {{ dartName . }};
  {{ end }}
 
  {{ .Name }}({
   {{ range .Columns -}} 
   {{ if .Tags.Json.Ignore }} {{ continue }} {{ end -}}
   {{ if columnOptional . -}}
   this.{{ dartName . }}, 
   {{ else -}}
   required this.{{ dartName . }},
   {{ end -}}
   {{ end -}}
  });

   factory {{ .Name }}.fromJson(Map<String, dynamic> json) => _${{ .Name }}FromJson(json);
   Map<String, dynamic> toJson() => _${{ .Name }}ToJson(this);
}
{{ end -}}

{{ range .Schema.Tables }}
@JsonSerializable()
class {{ .Name }}CreateInput {
  {{ range .Columns -}}
  {{ if .Tags.Json.Ignore }} {{ continue }} {{ end -}}
  {{ dartType . "create" }}{{ dartOptionalCreateString . }} {{ dartName . }};
  {{ end }}

  {{ .Name }}CreateInput({
   {{ range .Columns -}} 
   {{ if .Tags.Json.Ignore }} {{ continue }} {{ end -}}
   {{ if dartOptionalCreate . -}}
   this.{{ dartName . }}, 
   {{ else -}}
   required this.{{ dartName . }},
   {{ end -}}
   {{ end -}}
  });
   
   factory {{ .Name }}CreateInput.fromJson(Map<String, dynamic> json) => _${{ .Name }}CreateInputFromJson(json);
   Map<String, dynamic> toJson() => _${{ .Name }}CreateInputToJson(this);
}
@JsonSerializable()
class {{ .Name }}UpdateInput {
  {{ range .Columns -}}
  {{ if .Tags.Json.Ignore }} {{ continue }} {{ end -}}
  {{ dartType . "update"}}? {{ dartName . }};
  {{ end }}

  {{ .Name }}UpdateInput({
   {{ range .Columns -}} 
   {{ if .Tags.Json.Ignore }} {{ continue }} {{ end -}}
   this.{{ dartName . }}, 
   {{ end -}}
  });
   
   factory {{ .Name }}UpdateInput.fromJson(Map<String, dynamic> json) => _${{ .Name }}UpdateInputFromJson(json);
   Map<String, dynamic> toJson() => _${{ .Name }}UpdateInputToJson(this);
}
{{ end }}