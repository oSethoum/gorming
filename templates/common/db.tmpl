package db

import (
	"log"

	{{ if eq .Config.DBKind "sqlite" }}
	"fmt"
	"github.com/oSethoum/sqlite"
	{{ end }}
	{{ if eq .Config.DBKind "mysql" }}
	"gorm.io/driver/mysql"
	{{ end }}
	{{ if eq .Config.DBKind "postgres" }}
	"gorm.io/driver/postgres"
	{{ end }}
	"gorm.io/gorm"
	{{ if .Config.Debug -}}
	"gorm.io/gorm/logger"
	{{- end -}}
)

var Client *gorm.DB

func Init() {
	{{ if eq .Config.DBKind "sqlite" }}
	dsn := fmt.Sprintf("file:%s?_fk=1&_pragma_key=%s", "db.sqlite", "")
	dialect := sqlite.Open(dsn)
	{{ end }}

	{{ if eq .Config.DBKind "mysql" }}
	dsn := "user:pass@tcp(127.0.0.1:3306)/dbname?charset=utf8mb4&parseTime=True&loc=Local"
	dialect := mysql.Open(dsn)
	{{ end }}
	{{ if eq .Config.DBKind "postgres" }}
	dsn := "host=localhost user= password= dbname= port=5432 sslmode=disable"
	dialect := postgres.Open(dsn)
	{{ end }}
	client, err := gorm.Open(dialect, &gorm.Config{
		PrepareStmt:                              true,
		{{- if .Config.Debug -}}
		Logger:                                   logger.Default.LogMode(logger.Info),
		{{- end -}}
	})

	if err != nil {
		log.Fatalln(err)
	}

	Client = client
}

func Close() {
	conn, _ := Client.DB()
	conn.Close()
}
